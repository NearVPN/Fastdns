<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="486.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="469" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="469" > </text>
<g id="frames">
<g >
<title>runtime.gcMarkTermination (1 samples, 0.04%)</title><rect x="747.8" y="389" width="0.5" height="15.0" fill="rgb(213,188,51)" rx="2" ry="2" />
<text  x="750.84" y="399.5" ></text>
</g>
<g >
<title>runtime.walltime1 (4 samples, 0.15%)</title><rect x="1187.7" y="421" width="1.8" height="15.0" fill="rgb(223,225,29)" rx="2" ry="2" />
<text  x="1190.73" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeMSpanLocked (1 samples, 0.04%)</title><rect x="746.9" y="325" width="0.5" height="15.0" fill="rgb(216,201,44)" rx="2" ry="2" />
<text  x="749.93" y="335.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.04%)</title><rect x="91.0" y="197" width="0.4" height="15.0" fill="rgb(237,47,37)" rx="2" ry="2" />
<text  x="93.97" y="207.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (1 samples, 0.04%)</title><rect x="1022.1" y="293" width="0.5" height="15.0" fill="rgb(230,90,48)" rx="2" ry="2" />
<text  x="1025.14" y="303.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (2 samples, 0.08%)</title><rect x="866.1" y="165" width="0.9" height="15.0" fill="rgb(229,220,46)" rx="2" ry="2" />
<text  x="869.11" y="175.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (14 samples, 0.54%)</title><rect x="698.3" y="197" width="6.3" height="15.0" fill="rgb(223,224,51)" rx="2" ry="2" />
<text  x="701.26" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.04%)</title><rect x="1159.1" y="325" width="0.4" height="15.0" fill="rgb(225,174,42)" rx="2" ry="2" />
<text  x="1162.07" y="335.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (1 samples, 0.04%)</title><rect x="762.4" y="357" width="0.5" height="15.0" fill="rgb(223,180,9)" rx="2" ry="2" />
<text  x="765.40" y="367.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (5 samples, 0.19%)</title><rect x="77.8" y="229" width="2.3" height="15.0" fill="rgb(210,44,16)" rx="2" ry="2" />
<text  x="80.78" y="239.5" ></text>
</g>
<g >
<title>sync.(*poolChain).pushHead (5 samples, 0.19%)</title><rect x="726.9" y="357" width="2.3" height="15.0" fill="rgb(205,52,34)" rx="2" ry="2" />
<text  x="729.92" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (22 samples, 0.85%)</title><rect x="67.8" y="229" width="10.0" height="15.0" fill="rgb(234,61,15)" rx="2" ry="2" />
<text  x="70.77" y="239.5" ></text>
</g>
<g >
<title>github.com/phuslu/fastdns.(*Message).SetResponseHeader (4 samples, 0.15%)</title><rect x="52.8" y="325" width="1.8" height="15.0" fill="rgb(234,116,24)" rx="2" ry="2" />
<text  x="55.76" y="335.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (5 samples, 0.19%)</title><rect x="1015.3" y="229" width="2.3" height="15.0" fill="rgb(220,128,45)" rx="2" ry="2" />
<text  x="1018.32" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.04%)</title><rect x="68.7" y="149" width="0.4" height="15.0" fill="rgb(220,143,30)" rx="2" ry="2" />
<text  x="71.68" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (3 samples, 0.12%)</title><rect x="863.4" y="165" width="1.3" height="15.0" fill="rgb(223,24,16)" rx="2" ry="2" />
<text  x="866.38" y="175.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (6 samples, 0.23%)</title><rect x="724.2" y="357" width="2.7" height="15.0" fill="rgb(228,13,49)" rx="2" ry="2" />
<text  x="727.19" y="367.5" ></text>
</g>
<g >
<title>runtime.heapBits.next (1 samples, 0.04%)</title><rect x="762.9" y="357" width="0.4" height="15.0" fill="rgb(205,183,12)" rx="2" ry="2" />
<text  x="765.85" y="367.5" ></text>
</g>
<g >
<title>runtime.notewakeup (6 samples, 0.23%)</title><rect x="1177.7" y="325" width="2.7" height="15.0" fill="rgb(249,164,13)" rx="2" ry="2" />
<text  x="1180.72" y="335.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (18 samples, 0.69%)</title><rect x="69.6" y="213" width="8.2" height="15.0" fill="rgb(208,210,43)" rx="2" ry="2" />
<text  x="72.59" y="223.5" ></text>
</g>
<g >
<title>runtime.schedule (315 samples, 12.14%)</title><rect x="1039.0" y="389" width="143.3" height="15.0" fill="rgb(218,216,19)" rx="2" ry="2" />
<text  x="1041.97" y="399.5" >runtime.schedule</text>
</g>
<g >
<title>runtime.unlockWithRank (7 samples, 0.27%)</title><rect x="823.4" y="309" width="3.1" height="15.0" fill="rgb(247,115,27)" rx="2" ry="2" />
<text  x="826.35" y="319.5" ></text>
</g>
<g >
<title>runtime.casgstatus (5 samples, 0.19%)</title><rect x="1067.2" y="357" width="2.3" height="15.0" fill="rgb(237,99,6)" rx="2" ry="2" />
<text  x="1070.18" y="367.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (3 samples, 0.12%)</title><rect x="763.3" y="293" width="1.4" height="15.0" fill="rgb(250,84,10)" rx="2" ry="2" />
<text  x="766.31" y="303.5" ></text>
</g>
<g >
<title>runtime.bulkBarrierPreWrite (1 samples, 0.04%)</title><rect x="1022.1" y="309" width="0.5" height="15.0" fill="rgb(225,227,11)" rx="2" ry="2" />
<text  x="1025.14" y="319.5" ></text>
</g>
<g >
<title>runtime.netpollcheckerr (1 samples, 0.04%)</title><rect x="1019.0" y="277" width="0.4" height="15.0" fill="rgb(210,170,48)" rx="2" ry="2" />
<text  x="1021.96" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (18 samples, 0.69%)</title><rect x="69.6" y="181" width="8.2" height="15.0" fill="rgb(207,182,53)" rx="2" ry="2" />
<text  x="72.59" y="191.5" ></text>
</g>
<g >
<title>net.(*UDPConn).ReadFromUDP (423 samples, 16.31%)</title><rect x="839.3" y="373" width="192.4" height="15.0" fill="rgb(248,4,0)" rx="2" ry="2" />
<text  x="842.28" y="383.5" >net.(*UDPConn).ReadFromUDP</text>
</g>
<g >
<title>runtime.pMask.read (2 samples, 0.08%)</title><rect x="1147.7" y="357" width="0.9" height="15.0" fill="rgb(207,29,8)" rx="2" ry="2" />
<text  x="1150.69" y="367.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="1022.1" y="277" width="0.5" height="15.0" fill="rgb(240,201,51)" rx="2" ry="2" />
<text  x="1025.14" y="287.5" ></text>
</g>
<g >
<title>runtime.getStackMap (1 samples, 0.04%)</title><rect x="763.8" y="261" width="0.4" height="15.0" fill="rgb(223,35,14)" rx="2" ry="2" />
<text  x="766.76" y="271.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.04%)</title><rect x="1033.5" y="389" width="0.5" height="15.0" fill="rgb(238,100,15)" rx="2" ry="2" />
<text  x="1036.52" y="399.5" ></text>
</g>
<g >
<title>runtime.resetspinning (7 samples, 0.27%)</title><rect x="1177.3" y="373" width="3.1" height="15.0" fill="rgb(226,227,15)" rx="2" ry="2" />
<text  x="1180.26" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (1 samples, 0.04%)</title><rect x="747.8" y="293" width="0.5" height="15.0" fill="rgb(226,11,15)" rx="2" ry="2" />
<text  x="750.84" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (16 samples, 0.62%)</title><rect x="1023.5" y="341" width="7.3" height="15.0" fill="rgb(250,9,24)" rx="2" ry="2" />
<text  x="1026.51" y="351.5" ></text>
</g>
<g >
<title>runtime.casgstatus (3 samples, 0.12%)</title><rect x="1014.0" y="229" width="1.3" height="15.0" fill="rgb(247,8,37)" rx="2" ry="2" />
<text  x="1016.96" y="239.5" ></text>
</g>
<g >
<title>runtime.findrunnable (1 samples, 0.04%)</title><rect x="1033.1" y="357" width="0.4" height="15.0" fill="rgb(229,108,7)" rx="2" ry="2" />
<text  x="1036.06" y="367.5" ></text>
</g>
<g >
<title>runtime.goready (19 samples, 0.73%)</title><rect x="813.8" y="309" width="8.6" height="15.0" fill="rgb(253,14,43)" rx="2" ry="2" />
<text  x="816.80" y="319.5" ></text>
</g>
<g >
<title>runtime.pMask.set (1 samples, 0.04%)</title><rect x="1148.6" y="357" width="0.5" height="15.0" fill="rgb(242,211,2)" rx="2" ry="2" />
<text  x="1151.60" y="367.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (2 samples, 0.08%)</title><rect x="1030.8" y="341" width="0.9" height="15.0" fill="rgb(206,51,33)" rx="2" ry="2" />
<text  x="1033.79" y="351.5" ></text>
</g>
<g >
<title>runtime.semacquire1 (5 samples, 0.19%)</title><rect x="708.3" y="213" width="2.2" height="15.0" fill="rgb(213,74,32)" rx="2" ry="2" />
<text  x="711.27" y="223.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.04%)</title><rect x="867.0" y="213" width="0.5" height="15.0" fill="rgb(236,64,50)" rx="2" ry="2" />
<text  x="870.02" y="223.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (1 samples, 0.04%)</title><rect x="866.1" y="101" width="0.5" height="15.0" fill="rgb(211,87,25)" rx="2" ry="2" />
<text  x="869.11" y="111.5" ></text>
</g>
<g >
<title>runtime.save (1 samples, 0.04%)</title><rect x="1010.8" y="213" width="0.4" height="15.0" fill="rgb(253,200,26)" rx="2" ry="2" />
<text  x="1013.77" y="223.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (2 samples, 0.08%)</title><rect x="73.2" y="117" width="0.9" height="15.0" fill="rgb(214,142,51)" rx="2" ry="2" />
<text  x="76.23" y="127.5" ></text>
</g>
<g >
<title>runtime.mget (1 samples, 0.04%)</title><rect x="1177.3" y="341" width="0.4" height="15.0" fill="rgb(219,168,43)" rx="2" ry="2" />
<text  x="1180.26" y="351.5" ></text>
</g>
<g >
<title>runtime.parkunlock_c (1 samples, 0.04%)</title><rect x="1038.5" y="389" width="0.5" height="15.0" fill="rgb(227,216,37)" rx="2" ry="2" />
<text  x="1041.52" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.04%)</title><rect x="1027.6" y="293" width="0.5" height="15.0" fill="rgb(206,165,2)" rx="2" ry="2" />
<text  x="1030.60" y="303.5" ></text>
</g>
<g >
<title>runtime.readyWithTime (4 samples, 0.15%)</title><rect x="94.2" y="181" width="1.8" height="15.0" fill="rgb(239,62,22)" rx="2" ry="2" />
<text  x="97.16" y="191.5" ></text>
</g>
<g >
<title>github.com/phuslu/fastdns.(*ForkServer).ListenAndServe (495 samples, 19.08%)</title><rect x="806.5" y="389" width="225.2" height="15.0" fill="rgb(240,51,20)" rx="2" ry="2" />
<text  x="809.52" y="399.5" >github.com/phuslu/fastdns.(*F..</text>
</g>
<g >
<title>runtime.gcWriteBarrierCX (2 samples, 0.08%)</title><rect x="709.6" y="181" width="0.9" height="15.0" fill="rgb(247,183,40)" rx="2" ry="2" />
<text  x="712.63" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="867.0" y="181" width="0.5" height="15.0" fill="rgb(224,122,53)" rx="2" ry="2" />
<text  x="870.02" y="191.5" ></text>
</g>
<g >
<title>aeshashbody (2 samples, 0.08%)</title><rect x="718.3" y="309" width="0.9" height="15.0" fill="rgb(223,162,31)" rx="2" ry="2" />
<text  x="721.27" y="319.5" ></text>
</g>
<g >
<title>runtime.stopm (14 samples, 0.54%)</title><rect x="1158.6" y="357" width="6.4" height="15.0" fill="rgb(241,33,28)" rx="2" ry="2" />
<text  x="1161.61" y="367.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (2 samples, 0.08%)</title><rect x="761.5" y="325" width="0.9" height="15.0" fill="rgb(247,147,31)" rx="2" ry="2" />
<text  x="764.49" y="335.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (5 samples, 0.19%)</title><rect x="706.0" y="213" width="2.3" height="15.0" fill="rgb(205,137,52)" rx="2" ry="2" />
<text  x="708.99" y="223.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (5 samples, 0.19%)</title><rect x="1028.5" y="325" width="2.3" height="15.0" fill="rgb(242,95,7)" rx="2" ry="2" />
<text  x="1031.51" y="335.5" ></text>
</g>
<g >
<title>main.(*DNSHandler).handleHost (1,482 samples, 57.13%)</title><rect x="47.8" y="357" width="674.1" height="15.0" fill="rgb(238,149,52)" rx="2" ry="2" />
<text  x="50.76" y="367.5" >main.(*DNSHandler).handleHost</text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.12%)</title><rect x="863.4" y="149" width="1.3" height="15.0" fill="rgb(206,177,41)" rx="2" ry="2" />
<text  x="866.38" y="159.5" ></text>
</g>
<g >
<title>runtime.scanobject (7 samples, 0.27%)</title><rect x="74.6" y="133" width="3.2" height="15.0" fill="rgb(245,22,36)" rx="2" ry="2" />
<text  x="77.60" y="143.5" ></text>
</g>
<g >
<title>github.com/phuslu/fastdns.AppendHOSTRecord (4 samples, 0.15%)</title><rect x="711.0" y="325" width="1.8" height="15.0" fill="rgb(209,50,38)" rx="2" ry="2" />
<text  x="713.99" y="335.5" ></text>
</g>
<g >
<title>runtime.chanrecv (27 samples, 1.04%)</title><rect x="730.6" y="373" width="12.2" height="15.0" fill="rgb(236,88,34)" rx="2" ry="2" />
<text  x="733.56" y="383.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.12%)</title><rect x="865.7" y="213" width="1.3" height="15.0" fill="rgb(229,195,46)" rx="2" ry="2" />
<text  x="868.66" y="223.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (4 samples, 0.15%)</title><rect x="94.2" y="133" width="1.8" height="15.0" fill="rgb(244,112,21)" rx="2" ry="2" />
<text  x="97.16" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (2 samples, 0.08%)</title><rect x="1026.7" y="261" width="0.9" height="15.0" fill="rgb(219,90,45)" rx="2" ry="2" />
<text  x="1029.69" y="271.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (5 samples, 0.19%)</title><rect x="1182.3" y="389" width="2.2" height="15.0" fill="rgb(245,202,20)" rx="2" ry="2" />
<text  x="1185.27" y="399.5" ></text>
</g>
<g >
<title>runtime.checkTimers (2 samples, 0.08%)</title><rect x="1064.0" y="373" width="0.9" height="15.0" fill="rgb(206,13,49)" rx="2" ry="2" />
<text  x="1066.99" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.04%)</title><rect x="865.2" y="197" width="0.5" height="15.0" fill="rgb(248,133,27)" rx="2" ry="2" />
<text  x="868.20" y="207.5" ></text>
</g>
<g >
<title>runtime.(*guintptr).cas (3 samples, 0.12%)</title><rect x="1043.1" y="373" width="1.3" height="15.0" fill="rgb(217,76,51)" rx="2" ry="2" />
<text  x="1046.07" y="383.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (2 samples, 0.08%)</title><rect x="72.3" y="85" width="0.9" height="15.0" fill="rgb(230,0,35)" rx="2" ry="2" />
<text  x="75.32" y="95.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4.1 (1 samples, 0.04%)</title><rect x="747.8" y="325" width="0.5" height="15.0" fill="rgb(208,167,48)" rx="2" ry="2" />
<text  x="750.84" y="335.5" ></text>
</g>
<g >
<title>gosave_systemstack_switch (1 samples, 0.04%)</title><rect x="1187.3" y="405" width="0.4" height="15.0" fill="rgb(206,80,27)" rx="2" ry="2" />
<text  x="1190.27" y="415.5" ></text>
</g>
<g >
<title>runtime.runqempty (1 samples, 0.04%)</title><rect x="1033.1" y="341" width="0.4" height="15.0" fill="rgb(234,148,23)" rx="2" ry="2" />
<text  x="1036.06" y="351.5" ></text>
</g>
<g >
<title>runtime.gosched_m (2 samples, 0.08%)</title><rect x="1033.1" y="405" width="0.9" height="15.0" fill="rgb(205,156,23)" rx="2" ry="2" />
<text  x="1036.06" y="415.5" ></text>
</g>
<g >
<title>runtime/pprof.profileWriter (1 samples, 0.04%)</title><rect x="1189.5" y="421" width="0.5" height="15.0" fill="rgb(234,71,20)" rx="2" ry="2" />
<text  x="1192.55" y="431.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.04%)</title><rect x="1184.5" y="341" width="0.5" height="15.0" fill="rgb(228,96,41)" rx="2" ry="2" />
<text  x="1187.54" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (12 samples, 0.46%)</title><rect x="862.0" y="245" width="5.5" height="15.0" fill="rgb(251,126,17)" rx="2" ry="2" />
<text  x="865.02" y="255.5" ></text>
</g>
<g >
<title>net.(*ipv6ZoneCache).name (2 samples, 0.08%)</title><rect x="849.3" y="325" width="0.9" height="15.0" fill="rgb(214,66,9)" rx="2" ry="2" />
<text  x="852.28" y="335.5" ></text>
</g>
<g >
<title>runtime.runqget (2 samples, 0.08%)</title><rect x="1180.4" y="373" width="1.0" height="15.0" fill="rgb(247,27,51)" rx="2" ry="2" />
<text  x="1183.45" y="383.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (3 samples, 0.12%)</title><rect x="763.3" y="341" width="1.4" height="15.0" fill="rgb(223,51,44)" rx="2" ry="2" />
<text  x="766.31" y="351.5" ></text>
</g>
<g >
<title>syscall.SendmsgN (1,338 samples, 51.58%)</title><rect x="96.0" y="245" width="608.6" height="15.0" fill="rgb(236,180,9)" rx="2" ry="2" />
<text  x="98.98" y="255.5" >syscall.SendmsgN</text>
</g>
<g >
<title>github.com/phuslu/fastdns.ParseMessage (23 samples, 0.89%)</title><rect x="33.7" y="373" width="10.4" height="15.0" fill="rgb(252,98,45)" rx="2" ry="2" />
<text  x="36.65" y="383.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (3 samples, 0.12%)</title><rect x="94.6" y="53" width="1.4" height="15.0" fill="rgb(226,61,7)" rx="2" ry="2" />
<text  x="97.61" y="63.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (2 samples, 0.08%)</title><rect x="73.2" y="133" width="0.9" height="15.0" fill="rgb(240,18,2)" rx="2" ry="2" />
<text  x="76.23" y="143.5" ></text>
</g>
<g >
<title>runtime.netpoll (144 samples, 5.55%)</title><rect x="1082.2" y="357" width="65.5" height="15.0" fill="rgb(246,64,33)" rx="2" ry="2" />
<text  x="1085.19" y="367.5" >runtime..</text>
</g>
<g >
<title>runtime.netpollblockcommit (2 samples, 0.08%)</title><rect x="1037.6" y="389" width="0.9" height="15.0" fill="rgb(219,123,16)" rx="2" ry="2" />
<text  x="1040.61" y="399.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.08%)</title><rect x="821.5" y="229" width="0.9" height="15.0" fill="rgb(232,188,39)" rx="2" ry="2" />
<text  x="824.53" y="239.5" ></text>
</g>
<g >
<title>runtime.heapBits.initSpan (1 samples, 0.04%)</title><rect x="864.7" y="165" width="0.5" height="15.0" fill="rgb(216,206,30)" rx="2" ry="2" />
<text  x="867.75" y="175.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (4 samples, 0.15%)</title><rect x="809.7" y="341" width="1.8" height="15.0" fill="rgb(206,189,41)" rx="2" ry="2" />
<text  x="812.71" y="351.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.04%)</title><rect x="867.0" y="117" width="0.5" height="15.0" fill="rgb(229,46,4)" rx="2" ry="2" />
<text  x="870.02" y="127.5" ></text>
</g>
<g >
<title>runtime.bgsweep (5 samples, 0.19%)</title><rect x="745.6" y="421" width="2.2" height="15.0" fill="rgb(219,48,3)" rx="2" ry="2" />
<text  x="748.57" y="431.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (11 samples, 0.42%)</title><rect x="716.5" y="325" width="5.0" height="15.0" fill="rgb(251,225,13)" rx="2" ry="2" />
<text  x="719.45" y="335.5" ></text>
</g>
<g >
<title>runtime.execute (14 samples, 0.54%)</title><rect x="1064.9" y="373" width="6.4" height="15.0" fill="rgb(233,74,17)" rx="2" ry="2" />
<text  x="1067.90" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (3 samples, 0.12%)</title><rect x="1026.7" y="325" width="1.4" height="15.0" fill="rgb(243,138,19)" rx="2" ry="2" />
<text  x="1029.69" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (2 samples, 0.08%)</title><rect x="68.7" y="181" width="0.9" height="15.0" fill="rgb(235,78,13)" rx="2" ry="2" />
<text  x="71.68" y="191.5" ></text>
</g>
<g >
<title>runtime.strhash (1 samples, 0.04%)</title><rect x="721.0" y="309" width="0.5" height="15.0" fill="rgb(237,73,17)" rx="2" ry="2" />
<text  x="724.00" y="319.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.04%)</title><rect x="1184.5" y="373" width="0.5" height="15.0" fill="rgb(230,8,23)" rx="2" ry="2" />
<text  x="1187.54" y="383.5" ></text>
</g>
<g >
<title>runtime.netpollready (1 samples, 0.04%)</title><rect x="1145.4" y="341" width="0.5" height="15.0" fill="rgb(224,12,45)" rx="2" ry="2" />
<text  x="1148.42" y="351.5" ></text>
</g>
<g >
<title>runtime.pidleput (6 samples, 0.23%)</title><rect x="1150.4" y="357" width="2.8" height="15.0" fill="rgb(232,102,4)" rx="2" ry="2" />
<text  x="1153.42" y="367.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).put (2 samples, 0.08%)</title><rect x="779.2" y="325" width="0.9" height="15.0" fill="rgb(253,127,11)" rx="2" ry="2" />
<text  x="782.23" y="335.5" ></text>
</g>
<g >
<title>internal/bytealg.Equal (3 samples, 0.12%)</title><rect x="66.0" y="245" width="1.3" height="15.0" fill="rgb(207,118,7)" rx="2" ry="2" />
<text  x="68.95" y="255.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.04%)</title><rect x="80.1" y="261" width="0.4" height="15.0" fill="rgb(221,73,40)" rx="2" ry="2" />
<text  x="83.05" y="271.5" ></text>
</g>
<g >
<title>github.com/phuslu/fastdns.(*workerPool).workerFunc (1,617 samples, 62.34%)</title><rect x="10.0" y="405" width="735.6" height="15.0" fill="rgb(205,100,10)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >github.com/phuslu/fastdns.(*workerPool).workerFunc</text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.04%)</title><rect x="707.8" y="181" width="0.5" height="15.0" fill="rgb(216,164,22)" rx="2" ry="2" />
<text  x="710.81" y="191.5" ></text>
</g>
<g >
<title>github.com/phuslu/fastdns.(*workerPool).getCh (6 samples, 0.23%)</title><rect x="807.0" y="357" width="2.7" height="15.0" fill="rgb(217,45,47)" rx="2" ry="2" />
<text  x="809.98" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (3 samples, 0.12%)</title><rect x="1026.7" y="309" width="1.4" height="15.0" fill="rgb(231,194,22)" rx="2" ry="2" />
<text  x="1029.69" y="319.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.04%)</title><rect x="68.7" y="133" width="0.4" height="15.0" fill="rgb(229,106,30)" rx="2" ry="2" />
<text  x="71.68" y="143.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.04%)</title><rect x="91.0" y="181" width="0.4" height="15.0" fill="rgb(221,136,34)" rx="2" ry="2" />
<text  x="93.97" y="191.5" ></text>
</g>
<g >
<title>runtime.markroot (3 samples, 0.12%)</title><rect x="763.3" y="357" width="1.4" height="15.0" fill="rgb(219,128,46)" rx="2" ry="2" />
<text  x="766.31" y="367.5" ></text>
</g>
<g >
<title>runtime.updateTimerPMask (3 samples, 0.12%)</title><rect x="1151.8" y="341" width="1.4" height="15.0" fill="rgb(232,109,53)" rx="2" ry="2" />
<text  x="1154.79" y="351.5" ></text>
</g>
<g >
<title>runtime.futexsleep (2 samples, 0.08%)</title><rect x="1165.9" y="341" width="0.9" height="15.0" fill="rgb(247,143,4)" rx="2" ry="2" />
<text  x="1168.89" y="351.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (3 samples, 0.12%)</title><rect x="763.3" y="277" width="1.4" height="15.0" fill="rgb(235,55,23)" rx="2" ry="2" />
<text  x="766.31" y="287.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).writeUnlock (20 samples, 0.77%)</title><rect x="86.9" y="245" width="9.1" height="15.0" fill="rgb(206,9,15)" rx="2" ry="2" />
<text  x="89.88" y="255.5" ></text>
</g>
<g >
<title>runtime.unlock2 (5 samples, 0.19%)</title><rect x="1182.3" y="373" width="2.2" height="15.0" fill="rgb(207,127,50)" rx="2" ry="2" />
<text  x="1185.27" y="383.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (6 samples, 0.23%)</title><rect x="1177.7" y="309" width="2.7" height="15.0" fill="rgb(213,125,17)" rx="2" ry="2" />
<text  x="1180.72" y="319.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (1 samples, 0.04%)</title><rect x="1033.1" y="389" width="0.4" height="15.0" fill="rgb(249,58,18)" rx="2" ry="2" />
<text  x="1036.06" y="399.5" ></text>
</g>
<g >
<title>github.com/phuslu/fastdns.HOST (1,455 samples, 56.09%)</title><rect x="51.9" y="341" width="661.8" height="15.0" fill="rgb(232,171,41)" rx="2" ry="2" />
<text  x="54.85" y="351.5" >github.com/phuslu/fastdns.HOST</text>
</g>
<g >
<title>runtime.epollwait (132 samples, 5.09%)</title><rect x="1085.4" y="341" width="60.0" height="15.0" fill="rgb(216,138,25)" rx="2" ry="2" />
<text  x="1088.37" y="351.5" >runtim..</text>
</g>
<g >
<title>runtime.lock2 (4 samples, 0.15%)</title><rect x="826.5" y="325" width="1.9" height="15.0" fill="rgb(248,165,5)" rx="2" ry="2" />
<text  x="829.54" y="335.5" ></text>
</g>
<g >
<title>runtime.futex (6 samples, 0.23%)</title><rect x="1177.7" y="293" width="2.7" height="15.0" fill="rgb(241,193,38)" rx="2" ry="2" />
<text  x="1180.72" y="303.5" ></text>
</g>
<g >
<title>runtime.getempty (1 samples, 0.04%)</title><rect x="779.7" y="309" width="0.4" height="15.0" fill="rgb(232,30,4)" rx="2" ry="2" />
<text  x="782.68" y="319.5" ></text>
</g>
<g >
<title>runtime.chansend (33 samples, 1.27%)</title><rect x="811.5" y="341" width="15.0" height="15.0" fill="rgb(222,99,28)" rx="2" ry="2" />
<text  x="814.53" y="351.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.04%)</title><rect x="865.2" y="181" width="0.5" height="15.0" fill="rgb(234,59,25)" rx="2" ry="2" />
<text  x="868.20" y="191.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast_reacquired (1 samples, 0.04%)</title><rect x="1016.7" y="213" width="0.4" height="15.0" fill="rgb(217,59,15)" rx="2" ry="2" />
<text  x="1019.68" y="223.5" ></text>
</g>
<g >
<title>net.(*UDPConn).WriteMsgUDP (1,437 samples, 55.40%)</title><rect x="57.3" y="309" width="653.7" height="15.0" fill="rgb(239,116,44)" rx="2" ry="2" />
<text  x="60.31" y="319.5" >net.(*UDPConn).WriteMsgUDP</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="747.8" y="373" width="0.5" height="15.0" fill="rgb(235,1,12)" rx="2" ry="2" />
<text  x="750.84" y="383.5" ></text>
</g>
<g >
<title>net.isZeros (2 samples, 0.08%)</title><rect x="712.8" y="325" width="0.9" height="15.0" fill="rgb(241,22,7)" rx="2" ry="2" />
<text  x="715.81" y="335.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.04%)</title><rect x="747.4" y="341" width="0.4" height="15.0" fill="rgb(216,128,31)" rx="2" ry="2" />
<text  x="750.39" y="351.5" ></text>
</g>
<g >
<title>syscall.anyToSockaddr (24 samples, 0.93%)</title><rect x="857.9" y="277" width="10.9" height="15.0" fill="rgb(238,195,14)" rx="2" ry="2" />
<text  x="860.93" y="287.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwlock (12 samples, 0.46%)</title><rect x="705.1" y="245" width="5.4" height="15.0" fill="rgb(207,18,49)" rx="2" ry="2" />
<text  x="708.08" y="255.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (1 samples, 0.04%)</title><rect x="774.7" y="341" width="0.4" height="15.0" fill="rgb(219,107,2)" rx="2" ry="2" />
<text  x="777.68" y="351.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (2 samples, 0.08%)</title><rect x="1185.5" y="421" width="0.9" height="15.0" fill="rgb(248,147,18)" rx="2" ry="2" />
<text  x="1188.45" y="431.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (2 samples, 0.08%)</title><rect x="93.2" y="165" width="1.0" height="15.0" fill="rgb(206,203,14)" rx="2" ry="2" />
<text  x="96.25" y="175.5" ></text>
</g>
<g >
<title>runtime.checkTimers (4 samples, 0.15%)</title><rect x="1079.9" y="357" width="1.8" height="15.0" fill="rgb(211,67,18)" rx="2" ry="2" />
<text  x="1082.92" y="367.5" ></text>
</g>
<g >
<title>runtime.newobject (28 samples, 1.08%)</title><rect x="67.3" y="245" width="12.8" height="15.0" fill="rgb(247,69,12)" rx="2" ry="2" />
<text  x="70.32" y="255.5" ></text>
</g>
<g >
<title>runtime.heapBits.forwardOrBoundary (1 samples, 0.04%)</title><rect x="864.7" y="149" width="0.5" height="15.0" fill="rgb(227,19,31)" rx="2" ry="2" />
<text  x="867.75" y="159.5" ></text>
</g>
<g >
<title>runtime.gcDrain (128 samples, 4.93%)</title><rect x="748.3" y="373" width="58.2" height="15.0" fill="rgb(206,0,38)" rx="2" ry="2" />
<text  x="751.30" y="383.5" >runtim..</text>
</g>
<g >
<title>sync.(*poolChain).popHead (2 samples, 0.08%)</title><rect x="838.4" y="341" width="0.9" height="15.0" fill="rgb(228,23,34)" rx="2" ry="2" />
<text  x="841.37" y="351.5" ></text>
</g>
<g >
<title>all (2,594 samples, 100%)</title><rect x="10.0" y="437" width="1180.0" height="15.0" fill="rgb(232,1,0)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>github.com/phuslu/fastdns.serve (20 samples, 0.77%)</title><rect x="830.2" y="373" width="9.1" height="15.0" fill="rgb(230,52,40)" rx="2" ry="2" />
<text  x="833.18" y="383.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepare (1 samples, 0.04%)</title><rect x="1019.0" y="293" width="0.4" height="15.0" fill="rgb(207,143,54)" rx="2" ry="2" />
<text  x="1021.96" y="303.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).writeLock (13 samples, 0.50%)</title><rect x="704.6" y="261" width="5.9" height="15.0" fill="rgb(207,11,32)" rx="2" ry="2" />
<text  x="707.63" y="271.5" ></text>
</g>
<g >
<title>sync.(*poolChain).popTail (1 samples, 0.04%)</title><rect x="837.5" y="325" width="0.4" height="15.0" fill="rgb(239,34,1)" rx="2" ry="2" />
<text  x="840.46" y="335.5" ></text>
</g>
<g >
<title>runtime.park_m (331 samples, 12.76%)</title><rect x="1034.0" y="405" width="150.5" height="15.0" fill="rgb(227,130,5)" rx="2" ry="2" />
<text  x="1036.97" y="415.5" >runtime.park_m</text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.04%)</title><rect x="1022.1" y="229" width="0.5" height="15.0" fill="rgb(218,126,34)" rx="2" ry="2" />
<text  x="1025.14" y="239.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.04%)</title><rect x="1166.8" y="341" width="0.5" height="15.0" fill="rgb(222,228,30)" rx="2" ry="2" />
<text  x="1169.80" y="351.5" ></text>
</g>
<g >
<title>github.com/phuslu/fastdns.(*workerPool).getCh.func1 (1,617 samples, 62.34%)</title><rect x="10.0" y="421" width="735.6" height="15.0" fill="rgb(246,89,45)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >github.com/phuslu/fastdns.(*workerPool).getCh.func1</text>
</g>
<g >
<title>runtime.send (30 samples, 1.16%)</title><rect x="812.9" y="325" width="13.6" height="15.0" fill="rgb(227,149,31)" rx="2" ry="2" />
<text  x="815.89" y="335.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (5 samples, 0.19%)</title><rect x="755.6" y="325" width="2.2" height="15.0" fill="rgb(226,48,53)" rx="2" ry="2" />
<text  x="758.57" y="335.5" ></text>
</g>
<g >
<title>runtime.chanrecv2 (34 samples, 1.31%)</title><rect x="729.2" y="389" width="15.5" height="15.0" fill="rgb(226,46,25)" rx="2" ry="2" />
<text  x="732.19" y="399.5" ></text>
</g>
<g >
<title>runtime.heapBits.next (1 samples, 0.04%)</title><rect x="866.6" y="149" width="0.4" height="15.0" fill="rgb(241,75,37)" rx="2" ry="2" />
<text  x="869.57" y="159.5" ></text>
</g>
<g >
<title>runtime.newAllocBits (1 samples, 0.04%)</title><rect x="863.8" y="101" width="0.5" height="15.0" fill="rgb(215,203,36)" rx="2" ry="2" />
<text  x="866.84" y="111.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.04%)</title><rect x="67.3" y="229" width="0.5" height="15.0" fill="rgb(208,30,38)" rx="2" ry="2" />
<text  x="70.32" y="239.5" ></text>
</g>
<g >
<title>syscall.Syscall (1,326 samples, 51.12%)</title><rect x="101.4" y="213" width="603.2" height="15.0" fill="rgb(205,123,10)" rx="2" ry="2" />
<text  x="104.43" y="223.5" >syscall.Syscall</text>
</g>
<g >
<title>runtime.mcall (336 samples, 12.95%)</title><rect x="1031.7" y="421" width="152.8" height="15.0" fill="rgb(225,54,31)" rx="2" ry="2" />
<text  x="1034.70" y="431.5" >runtime.mcall</text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.15%)</title><rect x="94.2" y="149" width="1.8" height="15.0" fill="rgb(209,22,24)" rx="2" ry="2" />
<text  x="97.16" y="159.5" ></text>
</g>
<g >
<title>runtime.copystack (1 samples, 0.04%)</title><rect x="80.1" y="245" width="0.4" height="15.0" fill="rgb(209,53,21)" rx="2" ry="2" />
<text  x="83.05" y="255.5" ></text>
</g>
<g >
<title>sync.(*Pool).getSlow (4 samples, 0.15%)</title><rect x="836.1" y="341" width="1.8" height="15.0" fill="rgb(218,75,23)" rx="2" ry="2" />
<text  x="839.09" y="351.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (2 samples, 0.08%)</title><rect x="76.9" y="117" width="0.9" height="15.0" fill="rgb(220,9,9)" rx="2" ry="2" />
<text  x="79.87" y="127.5" ></text>
</g>
<g >
<title>net.(*netFD).writeMsg (1,386 samples, 53.43%)</title><rect x="80.5" y="277" width="630.5" height="15.0" fill="rgb(238,153,37)" rx="2" ry="2" />
<text  x="83.51" y="287.5" >net.(*netFD).writeMsg</text>
</g>
<g >
<title>runtime.runqsteal (10 samples, 0.39%)</title><rect x="1154.1" y="357" width="4.5" height="15.0" fill="rgb(209,120,16)" rx="2" ry="2" />
<text  x="1157.06" y="367.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (2 samples, 0.08%)</title><rect x="709.6" y="165" width="0.9" height="15.0" fill="rgb(247,79,52)" rx="2" ry="2" />
<text  x="712.63" y="175.5" ></text>
</g>
<g >
<title>runtime.futex (10 samples, 0.39%)</title><rect x="1160.4" y="293" width="4.6" height="15.0" fill="rgb(249,96,32)" rx="2" ry="2" />
<text  x="1163.43" y="303.5" ></text>
</g>
<g >
<title>main.main (495 samples, 19.08%)</title><rect x="806.5" y="405" width="225.2" height="15.0" fill="rgb(214,79,7)" rx="2" ry="2" />
<text  x="809.52" y="415.5" >main.main</text>
</g>
<g >
<title>runtime.unlock2 (2 samples, 0.08%)</title><rect x="1181.4" y="357" width="0.9" height="15.0" fill="rgb(210,109,33)" rx="2" ry="2" />
<text  x="1184.36" y="367.5" ></text>
</g>
<g >
<title>syscall.(*SockaddrInet6).sockaddr (5 samples, 0.19%)</title><rect x="98.7" y="229" width="2.3" height="15.0" fill="rgb(247,34,14)" rx="2" ry="2" />
<text  x="101.70" y="239.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (18 samples, 0.69%)</title><rect x="69.6" y="149" width="8.2" height="15.0" fill="rgb(228,207,27)" rx="2" ry="2" />
<text  x="72.59" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.04%)</title><rect x="747.8" y="309" width="0.5" height="15.0" fill="rgb(243,2,5)" rx="2" ry="2" />
<text  x="750.84" y="319.5" ></text>
</g>
<g >
<title>runtime.nanotime (5 samples, 0.19%)</title><rect x="21.4" y="357" width="2.2" height="15.0" fill="rgb(226,181,17)" rx="2" ry="2" />
<text  x="24.37" y="367.5" ></text>
</g>
<g >
<title>runtime.futexsleep (10 samples, 0.39%)</title><rect x="1160.4" y="309" width="4.6" height="15.0" fill="rgb(222,195,32)" rx="2" ry="2" />
<text  x="1163.43" y="319.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (40 samples, 1.54%)</title><rect x="780.1" y="341" width="18.2" height="15.0" fill="rgb(237,12,26)" rx="2" ry="2" />
<text  x="783.14" y="351.5" ></text>
</g>
<g >
<title>time.Now (19 samples, 0.73%)</title><rect x="20.0" y="373" width="8.7" height="15.0" fill="rgb(221,173,43)" rx="2" ry="2" />
<text  x="23.01" y="383.5" ></text>
</g>
<g >
<title>runtime.netpollunblock (4 samples, 0.15%)</title><rect x="1145.9" y="341" width="1.8" height="15.0" fill="rgb(210,162,4)" rx="2" ry="2" />
<text  x="1148.88" y="351.5" ></text>
</g>
<g >
<title>runtime.systemstack (18 samples, 0.69%)</title><rect x="814.3" y="293" width="8.1" height="15.0" fill="rgb(242,102,7)" rx="2" ry="2" />
<text  x="817.26" y="303.5" ></text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.04%)</title><rect x="867.0" y="229" width="0.5" height="15.0" fill="rgb(232,195,25)" rx="2" ry="2" />
<text  x="870.02" y="239.5" ></text>
</g>
<g >
<title>runtime.wakep (7 samples, 0.27%)</title><rect x="1177.3" y="357" width="3.1" height="15.0" fill="rgb(216,176,40)" rx="2" ry="2" />
<text  x="1180.26" y="367.5" ></text>
</g>
<g >
<title>main.(*DumpInfoImpl).GetHostRecords (17 samples, 0.66%)</title><rect x="713.7" y="341" width="7.8" height="15.0" fill="rgb(216,179,26)" rx="2" ry="2" />
<text  x="716.72" y="351.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.04%)</title><rect x="806.1" y="341" width="0.4" height="15.0" fill="rgb(246,150,27)" rx="2" ry="2" />
<text  x="809.07" y="351.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (129 samples, 4.97%)</title><rect x="747.8" y="421" width="58.7" height="15.0" fill="rgb(238,179,18)" rx="2" ry="2" />
<text  x="750.84" y="431.5" >runtim..</text>
</g>
<g >
<title>runtime.(*mspan).base (1 samples, 0.04%)</title><rect x="773.8" y="341" width="0.4" height="15.0" fill="rgb(236,198,8)" rx="2" ry="2" />
<text  x="776.77" y="351.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.04%)</title><rect x="1022.1" y="245" width="0.5" height="15.0" fill="rgb(248,109,13)" rx="2" ry="2" />
<text  x="1025.14" y="255.5" ></text>
</g>
<g >
<title>memeqbody (3 samples, 0.12%)</title><rect x="66.0" y="229" width="1.3" height="15.0" fill="rgb(247,151,48)" rx="2" ry="2" />
<text  x="68.95" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (5 samples, 0.19%)</title><rect x="745.6" y="389" width="2.2" height="15.0" fill="rgb(209,118,1)" rx="2" ry="2" />
<text  x="748.57" y="399.5" ></text>
</g>
<g >
<title>runtime.walltime (6 samples, 0.23%)</title><rect x="23.6" y="357" width="2.8" height="15.0" fill="rgb(212,128,6)" rx="2" ry="2" />
<text  x="26.65" y="367.5" ></text>
</g>
<g >
<title>runtime.chansend.func1 (1 samples, 0.04%)</title><rect x="813.3" y="309" width="0.5" height="15.0" fill="rgb(232,143,1)" rx="2" ry="2" />
<text  x="816.35" y="319.5" ></text>
</g>
<g >
<title>runtime.procPin (1 samples, 0.04%)</title><rect x="726.0" y="341" width="0.5" height="15.0" fill="rgb(252,6,32)" rx="2" ry="2" />
<text  x="729.01" y="351.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (128 samples, 4.93%)</title><rect x="748.3" y="389" width="58.2" height="15.0" fill="rgb(242,206,26)" rx="2" ry="2" />
<text  x="751.30" y="399.5" >runtim..</text>
</g>
<g >
<title>runtime.cansemacquire (1 samples, 0.04%)</title><rect x="705.5" y="213" width="0.5" height="15.0" fill="rgb(225,23,45)" rx="2" ry="2" />
<text  x="708.54" y="223.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (2 samples, 0.08%)</title><rect x="744.7" y="389" width="0.9" height="15.0" fill="rgb(224,83,43)" rx="2" ry="2" />
<text  x="747.66" y="399.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (2 samples, 0.08%)</title><rect x="76.0" y="117" width="0.9" height="15.0" fill="rgb(228,180,8)" rx="2" ry="2" />
<text  x="78.96" y="127.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (1 samples, 0.04%)</title><rect x="779.2" y="309" width="0.5" height="15.0" fill="rgb(223,185,16)" rx="2" ry="2" />
<text  x="782.23" y="319.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (3 samples, 0.12%)</title><rect x="865.7" y="229" width="1.3" height="15.0" fill="rgb(244,68,9)" rx="2" ry="2" />
<text  x="868.66" y="239.5" ></text>
</g>
<g >
<title>github.com/phuslu/fastdns.(*workerPool).release (23 samples, 0.89%)</title><rect x="18.2" y="389" width="10.5" height="15.0" fill="rgb(235,79,21)" rx="2" ry="2" />
<text  x="21.19" y="399.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (4 samples, 0.15%)</title><rect x="742.8" y="373" width="1.9" height="15.0" fill="rgb(228,9,4)" rx="2" ry="2" />
<text  x="745.84" y="383.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (3 samples, 0.12%)</title><rect x="865.7" y="197" width="1.3" height="15.0" fill="rgb(219,222,0)" rx="2" ry="2" />
<text  x="868.66" y="207.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).pushHead (2 samples, 0.08%)</title><rect x="728.3" y="341" width="0.9" height="15.0" fill="rgb(234,175,16)" rx="2" ry="2" />
<text  x="731.28" y="351.5" ></text>
</g>
<g >
<title>runtime.putfull (1 samples, 0.04%)</title><rect x="866.1" y="117" width="0.5" height="15.0" fill="rgb(236,187,25)" rx="2" ry="2" />
<text  x="869.11" y="127.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (2 samples, 0.08%)</title><rect x="1026.7" y="245" width="0.9" height="15.0" fill="rgb(225,71,46)" rx="2" ry="2" />
<text  x="1029.69" y="255.5" ></text>
</g>
<g >
<title>github.com/phuslu/fastdns.(*workerPool).Serve (52 samples, 2.00%)</title><rect x="806.5" y="373" width="23.7" height="15.0" fill="rgb(239,46,35)" rx="2" ry="2" />
<text  x="809.52" y="383.5" >g..</text>
</g>
<g >
<title>sync.(*Pool).Put (16 samples, 0.62%)</title><rect x="721.9" y="373" width="7.3" height="15.0" fill="rgb(254,220,43)" rx="2" ry="2" />
<text  x="724.91" y="383.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).queue (3 samples, 0.12%)</title><rect x="709.2" y="197" width="1.3" height="15.0" fill="rgb(235,2,38)" rx="2" ry="2" />
<text  x="712.18" y="207.5" ></text>
</g>
<g >
<title>runtime.forEachP (1 samples, 0.04%)</title><rect x="747.8" y="341" width="0.5" height="15.0" fill="rgb(231,7,51)" rx="2" ry="2" />
<text  x="750.84" y="351.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (1 samples, 0.04%)</title><rect x="747.8" y="357" width="0.5" height="15.0" fill="rgb(226,183,39)" rx="2" ry="2" />
<text  x="750.84" y="367.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (1 samples, 0.04%)</title><rect x="863.8" y="85" width="0.5" height="15.0" fill="rgb(244,206,2)" rx="2" ry="2" />
<text  x="866.84" y="95.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.04%)</title><rect x="1159.1" y="341" width="0.4" height="15.0" fill="rgb(248,77,19)" rx="2" ry="2" />
<text  x="1162.07" y="351.5" ></text>
</g>
<g >
<title>runtime.(*profBuf).read (1 samples, 0.04%)</title><rect x="1189.5" y="389" width="0.5" height="15.0" fill="rgb(250,96,39)" rx="2" ry="2" />
<text  x="1192.55" y="399.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).addObject (1 samples, 0.04%)</title><rect x="763.3" y="261" width="0.5" height="15.0" fill="rgb(245,118,38)" rx="2" ry="2" />
<text  x="766.31" y="271.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).next (39 samples, 1.50%)</title><rect x="1045.3" y="373" width="17.8" height="15.0" fill="rgb(225,156,29)" rx="2" ry="2" />
<text  x="1048.34" y="383.5" ></text>
</g>
<g >
<title>runtime.memmove (3 samples, 0.12%)</title><rect x="42.8" y="357" width="1.3" height="15.0" fill="rgb(247,185,31)" rx="2" ry="2" />
<text  x="45.75" y="367.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (1 samples, 0.04%)</title><rect x="773.3" y="341" width="0.5" height="15.0" fill="rgb(246,198,7)" rx="2" ry="2" />
<text  x="776.32" y="351.5" ></text>
</g>
<g >
<title>main.(*DumpInfoReloader).GetHostRecords (1 samples, 0.04%)</title><rect x="721.5" y="341" width="0.4" height="15.0" fill="rgb(209,141,48)" rx="2" ry="2" />
<text  x="724.46" y="351.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepareRead (1 samples, 0.04%)</title><rect x="1019.0" y="309" width="0.4" height="15.0" fill="rgb(223,50,9)" rx="2" ry="2" />
<text  x="1021.96" y="319.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (2 samples, 0.08%)</title><rect x="746.0" y="373" width="0.9" height="15.0" fill="rgb(229,196,20)" rx="2" ry="2" />
<text  x="749.02" y="383.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.04%)</title><rect x="742.4" y="357" width="0.4" height="15.0" fill="rgb(223,23,43)" rx="2" ry="2" />
<text  x="745.38" y="367.5" ></text>
</g>
<g >
<title>runtime.casgstatus (4 samples, 0.15%)</title><rect x="701.0" y="181" width="1.8" height="15.0" fill="rgb(253,105,11)" rx="2" ry="2" />
<text  x="703.99" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (2 samples, 0.08%)</title><rect x="1026.7" y="293" width="0.9" height="15.0" fill="rgb(246,209,3)" rx="2" ry="2" />
<text  x="1029.69" y="303.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (18 samples, 0.69%)</title><rect x="814.3" y="277" width="8.1" height="15.0" fill="rgb(220,41,24)" rx="2" ry="2" />
<text  x="817.26" y="287.5" ></text>
</g>
<g >
<title>runtime.pidleget (3 samples, 0.12%)</title><rect x="1149.1" y="357" width="1.3" height="15.0" fill="rgb(232,201,14)" rx="2" ry="2" />
<text  x="1152.06" y="367.5" ></text>
</g>
<g >
<title>runtime.(*headTailIndex).incTail (1 samples, 0.04%)</title><rect x="865.2" y="165" width="0.5" height="15.0" fill="rgb(248,83,14)" rx="2" ry="2" />
<text  x="868.20" y="175.5" ></text>
</g>
<g >
<title>runtime.runqempty (2 samples, 0.08%)</title><rect x="1153.2" y="357" width="0.9" height="15.0" fill="rgb(216,43,13)" rx="2" ry="2" />
<text  x="1156.15" y="367.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).position (2 samples, 0.08%)</title><rect x="1063.1" y="373" width="0.9" height="15.0" fill="rgb(215,43,0)" rx="2" ry="2" />
<text  x="1066.08" y="383.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (1 samples, 0.04%)</title><rect x="864.3" y="117" width="0.4" height="15.0" fill="rgb(220,110,20)" rx="2" ry="2" />
<text  x="867.29" y="127.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (2 samples, 0.08%)</title><rect x="1181.4" y="373" width="0.9" height="15.0" fill="rgb(226,151,42)" rx="2" ry="2" />
<text  x="1184.36" y="383.5" ></text>
</g>
<g >
<title>main.(*DNSHandler).ServeDNS (1,490 samples, 57.44%)</title><rect x="44.1" y="373" width="677.8" height="15.0" fill="rgb(206,70,27)" rx="2" ry="2" />
<text  x="47.12" y="383.5" >main.(*DNSHandler).ServeDNS</text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.04%)</title><rect x="1079.5" y="357" width="0.4" height="15.0" fill="rgb(232,122,31)" rx="2" ry="2" />
<text  x="1082.46" y="367.5" ></text>
</g>
<g >
<title>runtime.putempty (2 samples, 0.08%)</title><rect x="761.5" y="341" width="0.9" height="15.0" fill="rgb(230,94,2)" rx="2" ry="2" />
<text  x="764.49" y="351.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="746.9" y="357" width="0.5" height="15.0" fill="rgb(221,12,4)" rx="2" ry="2" />
<text  x="749.93" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (2 samples, 0.08%)</title><rect x="68.7" y="197" width="0.9" height="15.0" fill="rgb(245,147,26)" rx="2" ry="2" />
<text  x="71.68" y="207.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollWait (4 samples, 0.15%)</title><rect x="1020.3" y="277" width="1.8" height="15.0" fill="rgb(216,29,26)" rx="2" ry="2" />
<text  x="1023.32" y="287.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (10 samples, 0.39%)</title><rect x="91.4" y="197" width="4.6" height="15.0" fill="rgb(249,49,26)" rx="2" ry="2" />
<text  x="94.43" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (6 samples, 0.23%)</title><rect x="759.7" y="357" width="2.7" height="15.0" fill="rgb(246,46,46)" rx="2" ry="2" />
<text  x="762.67" y="367.5" ></text>
</g>
<g >
<title>syscall.recvfrom (327 samples, 12.61%)</title><rect x="868.8" y="277" width="148.8" height="15.0" fill="rgb(241,111,54)" rx="2" ry="2" />
<text  x="871.84" y="287.5" >syscall.recvfrom</text>
</g>
<g >
<title>runtime.unlock2 (7 samples, 0.27%)</title><rect x="823.4" y="293" width="3.1" height="15.0" fill="rgb(228,44,0)" rx="2" ry="2" />
<text  x="826.35" y="303.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.08%)</title><rect x="821.5" y="181" width="0.9" height="15.0" fill="rgb(215,80,39)" rx="2" ry="2" />
<text  x="824.53" y="191.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (1 samples, 0.04%)</title><rect x="71.9" y="101" width="0.4" height="15.0" fill="rgb(220,34,29)" rx="2" ry="2" />
<text  x="74.87" y="111.5" ></text>
</g>
<g >
<title>runtime.gentraceback (3 samples, 0.12%)</title><rect x="763.3" y="309" width="1.4" height="15.0" fill="rgb(229,19,14)" rx="2" ry="2" />
<text  x="766.31" y="319.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).popHead (1 samples, 0.04%)</title><rect x="838.8" y="325" width="0.5" height="15.0" fill="rgb(240,225,26)" rx="2" ry="2" />
<text  x="841.82" y="335.5" ></text>
</g>
<g >
<title>runtime.gogo (4 samples, 0.15%)</title><rect x="1069.5" y="357" width="1.8" height="15.0" fill="rgb(223,143,30)" rx="2" ry="2" />
<text  x="1072.45" y="367.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).done (2 samples, 0.08%)</title><rect x="1044.4" y="373" width="0.9" height="15.0" fill="rgb(225,22,42)" rx="2" ry="2" />
<text  x="1047.43" y="383.5" ></text>
</g>
<g >
<title>runtime.newArenaMayUnlock (1 samples, 0.04%)</title><rect x="747.4" y="357" width="0.4" height="15.0" fill="rgb(222,80,7)" rx="2" ry="2" />
<text  x="750.39" y="367.5" ></text>
</g>
<g >
<title>runtime.typeBitsBulkBarrier (1 samples, 0.04%)</title><rect x="822.9" y="293" width="0.5" height="15.0" fill="rgb(230,44,54)" rx="2" ry="2" />
<text  x="825.90" y="303.5" ></text>
</g>
<g >
<title>runtime.sweepone (5 samples, 0.19%)</title><rect x="745.6" y="405" width="2.2" height="15.0" fill="rgb(211,81,28)" rx="2" ry="2" />
<text  x="748.57" y="415.5" ></text>
</g>
<g >
<title>runtime.divRoundUp (1 samples, 0.04%)</title><rect x="1023.1" y="341" width="0.4" height="15.0" fill="rgb(210,164,12)" rx="2" ry="2" />
<text  x="1026.05" y="351.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (1 samples, 0.04%)</title><rect x="867.0" y="133" width="0.5" height="15.0" fill="rgb(221,141,16)" rx="2" ry="2" />
<text  x="870.02" y="143.5" ></text>
</g>
<g >
<title>runtime.sendDirect (2 samples, 0.08%)</title><rect x="822.4" y="309" width="1.0" height="15.0" fill="rgb(250,151,9)" rx="2" ry="2" />
<text  x="825.44" y="319.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.04%)</title><rect x="1027.6" y="277" width="0.5" height="15.0" fill="rgb(243,36,30)" rx="2" ry="2" />
<text  x="1030.60" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (128 samples, 4.93%)</title><rect x="748.3" y="405" width="58.2" height="15.0" fill="rgb(242,75,11)" rx="2" ry="2" />
<text  x="751.30" y="415.5" >runtim..</text>
</g>
<g >
<title>runtime.lockWithRank (4 samples, 0.15%)</title><rect x="826.5" y="341" width="1.9" height="15.0" fill="rgb(254,182,12)" rx="2" ry="2" />
<text  x="829.54" y="351.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (14 samples, 0.54%)</title><rect x="1011.2" y="245" width="6.4" height="15.0" fill="rgb(251,227,46)" rx="2" ry="2" />
<text  x="1014.23" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (2 samples, 0.08%)</title><rect x="1026.7" y="277" width="0.9" height="15.0" fill="rgb(209,40,6)" rx="2" ry="2" />
<text  x="1029.69" y="287.5" ></text>
</g>
<g >
<title>runtime.runqput (4 samples, 0.15%)</title><rect x="819.3" y="245" width="1.8" height="15.0" fill="rgb(253,63,0)" rx="2" ry="2" />
<text  x="822.26" y="255.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.08%)</title><rect x="1165.9" y="325" width="0.9" height="15.0" fill="rgb(240,213,54)" rx="2" ry="2" />
<text  x="1168.89" y="335.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (4 samples, 0.15%)</title><rect x="757.8" y="309" width="1.9" height="15.0" fill="rgb(252,9,46)" rx="2" ry="2" />
<text  x="760.85" y="319.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.04%)</title><rect x="1184.5" y="405" width="0.5" height="15.0" fill="rgb(248,123,49)" rx="2" ry="2" />
<text  x="1187.54" y="415.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (9 samples, 0.35%)</title><rect x="755.6" y="357" width="4.1" height="15.0" fill="rgb(233,125,30)" rx="2" ry="2" />
<text  x="758.57" y="367.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (8 samples, 0.31%)</title><rect x="835.6" y="357" width="3.7" height="15.0" fill="rgb(223,223,26)" rx="2" ry="2" />
<text  x="838.64" y="367.5" ></text>
</g>
<g >
<title>runtime.futex (3 samples, 0.12%)</title><rect x="94.6" y="37" width="1.4" height="15.0" fill="rgb(229,123,7)" rx="2" ry="2" />
<text  x="97.61" y="47.5" ></text>
</g>
<g >
<title>net.(*netFD).readFrom (378 samples, 14.57%)</title><rect x="850.2" y="325" width="171.9" height="15.0" fill="rgb(251,206,54)" rx="2" ry="2" />
<text  x="853.19" y="335.5" >net.(*netFD).readFrom</text>
</g>
<g >
<title>runtime.gopreempt_m (1 samples, 0.04%)</title><rect x="1184.5" y="389" width="0.5" height="15.0" fill="rgb(208,211,12)" rx="2" ry="2" />
<text  x="1187.54" y="399.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.04%)</title><rect x="867.0" y="165" width="0.5" height="15.0" fill="rgb(217,79,19)" rx="2" ry="2" />
<text  x="870.02" y="175.5" ></text>
</g>
<g >
<title>runtime.(*guintptr).cas (2 samples, 0.08%)</title><rect x="817.0" y="245" width="0.9" height="15.0" fill="rgb(225,229,21)" rx="2" ry="2" />
<text  x="819.99" y="255.5" ></text>
</g>
<g >
<title>runtime.putfull (2 samples, 0.08%)</title><rect x="72.3" y="101" width="0.9" height="15.0" fill="rgb(237,46,33)" rx="2" ry="2" />
<text  x="75.32" y="111.5" ></text>
</g>
<g >
<title>runtime.gopark (2 samples, 0.08%)</title><rect x="739.7" y="357" width="0.9" height="15.0" fill="rgb(233,129,24)" rx="2" ry="2" />
<text  x="742.65" y="367.5" ></text>
</g>
<g >
<title>runtime.ready (4 samples, 0.15%)</title><rect x="94.2" y="117" width="1.8" height="15.0" fill="rgb(247,221,33)" rx="2" ry="2" />
<text  x="97.16" y="127.5" ></text>
</g>
<g >
<title>runtime.chansend1 (41 samples, 1.58%)</title><rect x="809.7" y="357" width="18.7" height="15.0" fill="rgb(222,43,20)" rx="2" ry="2" />
<text  x="812.71" y="367.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (3 samples, 0.12%)</title><rect x="867.5" y="245" width="1.3" height="15.0" fill="rgb(205,172,34)" rx="2" ry="2" />
<text  x="870.48" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (5 samples, 0.19%)</title><rect x="863.4" y="229" width="2.3" height="15.0" fill="rgb(239,66,10)" rx="2" ry="2" />
<text  x="866.38" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.04%)</title><rect x="68.7" y="165" width="0.4" height="15.0" fill="rgb(215,16,8)" rx="2" ry="2" />
<text  x="71.68" y="175.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (1 samples, 0.04%)</title><rect x="69.1" y="165" width="0.5" height="15.0" fill="rgb(251,168,48)" rx="2" ry="2" />
<text  x="72.14" y="175.5" ></text>
</g>
<g >
<title>github.com/phuslu/fastdns.(*udpResponseWriter).Write (1,443 samples, 55.63%)</title><rect x="54.6" y="325" width="656.4" height="15.0" fill="rgb(234,144,53)" rx="2" ry="2" />
<text  x="57.58" y="335.5" >github.com/phuslu/fastdns.(*udpResponseWriter).Write</text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (3 samples, 0.12%)</title><rect x="865.7" y="181" width="1.3" height="15.0" fill="rgb(228,36,49)" rx="2" ry="2" />
<text  x="868.66" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (1 samples, 0.04%)</title><rect x="746.9" y="373" width="0.5" height="15.0" fill="rgb(229,190,12)" rx="2" ry="2" />
<text  x="749.93" y="383.5" ></text>
</g>
<g >
<title>runtime.startm (6 samples, 0.23%)</title><rect x="1177.7" y="341" width="2.7" height="15.0" fill="rgb(205,140,43)" rx="2" ry="2" />
<text  x="1180.72" y="351.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (1 samples, 0.04%)</title><rect x="1028.1" y="293" width="0.4" height="15.0" fill="rgb(218,215,40)" rx="2" ry="2" />
<text  x="1031.06" y="303.5" ></text>
</g>
<g >
<title>runtime.callers (1 samples, 0.04%)</title><rect x="867.0" y="197" width="0.5" height="15.0" fill="rgb(217,161,50)" rx="2" ry="2" />
<text  x="870.02" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (3 samples, 0.12%)</title><rect x="863.4" y="133" width="1.3" height="15.0" fill="rgb(249,211,44)" rx="2" ry="2" />
<text  x="866.38" y="143.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (4 samples, 0.15%)</title><rect x="702.8" y="181" width="1.8" height="15.0" fill="rgb(206,206,52)" rx="2" ry="2" />
<text  x="705.81" y="191.5" ></text>
</g>
<g >
<title>runtime.stackalloc (1 samples, 0.04%)</title><rect x="80.1" y="229" width="0.4" height="15.0" fill="rgb(225,98,37)" rx="2" ry="2" />
<text  x="83.05" y="239.5" ></text>
</g>
<g >
<title>runtime.putfull (4 samples, 0.15%)</title><rect x="757.8" y="325" width="1.9" height="15.0" fill="rgb(218,173,5)" rx="2" ry="2" />
<text  x="760.85" y="335.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).WriteMsg (1,366 samples, 52.66%)</title><rect x="83.2" y="261" width="621.4" height="15.0" fill="rgb(217,86,41)" rx="2" ry="2" />
<text  x="86.24" y="271.5" >internal/poll.(*FD).WriteMsg</text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (1 samples, 0.04%)</title><rect x="1022.1" y="261" width="0.5" height="15.0" fill="rgb(243,79,49)" rx="2" ry="2" />
<text  x="1025.14" y="271.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (1 samples, 0.04%)</title><rect x="837.9" y="341" width="0.5" height="15.0" fill="rgb(216,186,10)" rx="2" ry="2" />
<text  x="840.91" y="351.5" ></text>
</g>
<g >
<title>runtime.procUnpin (1 samples, 0.04%)</title><rect x="723.7" y="357" width="0.5" height="15.0" fill="rgb(209,158,46)" rx="2" ry="2" />
<text  x="726.73" y="367.5" ></text>
</g>
<g >
<title>github.com/phuslu/fastdns.serveCtx (1,540 samples, 59.37%)</title><rect x="28.7" y="389" width="700.5" height="15.0" fill="rgb(219,189,37)" rx="2" ry="2" />
<text  x="31.65" y="399.5" >github.com/phuslu/fastdns.serveCtx</text>
</g>
<g >
<title>runtime.systemstack (18 samples, 0.69%)</title><rect x="69.6" y="197" width="8.2" height="15.0" fill="rgb(254,206,17)" rx="2" ry="2" />
<text  x="72.59" y="207.5" ></text>
</g>
<g >
<title>runtime.futexsleep (2 samples, 0.08%)</title><rect x="706.9" y="181" width="0.9" height="15.0" fill="rgb(245,84,23)" rx="2" ry="2" />
<text  x="709.90" y="191.5" ></text>
</g>
<g >
<title>runtime.gcStart (1 samples, 0.04%)</title><rect x="1028.1" y="325" width="0.4" height="15.0" fill="rgb(212,182,13)" rx="2" ry="2" />
<text  x="1031.06" y="335.5" ></text>
</g>
<g >
<title>runtime.lock2 (5 samples, 0.19%)</title><rect x="706.0" y="197" width="2.3" height="15.0" fill="rgb(218,184,39)" rx="2" ry="2" />
<text  x="708.99" y="207.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwunlock (4 samples, 0.15%)</title><rect x="855.2" y="277" width="1.8" height="15.0" fill="rgb(226,194,51)" rx="2" ry="2" />
<text  x="858.20" y="287.5" ></text>
</g>
<g >
<title>internal/poll.runtime_Semacquire (11 samples, 0.42%)</title><rect x="705.5" y="229" width="5.0" height="15.0" fill="rgb(220,150,31)" rx="2" ry="2" />
<text  x="708.54" y="239.5" ></text>
</g>
<g >
<title>runtime.newobject (18 samples, 0.69%)</title><rect x="860.7" y="261" width="8.1" height="15.0" fill="rgb(206,158,49)" rx="2" ry="2" />
<text  x="863.66" y="271.5" ></text>
</g>
<g >
<title>net.(*UDPAddr).sockaddr (36 samples, 1.39%)</title><rect x="64.1" y="277" width="16.4" height="15.0" fill="rgb(231,25,22)" rx="2" ry="2" />
<text  x="67.13" y="287.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (17 samples, 0.66%)</title><rect x="798.3" y="341" width="7.8" height="15.0" fill="rgb(220,217,26)" rx="2" ry="2" />
<text  x="801.33" y="351.5" ></text>
</g>
<g >
<title>time.now (5 samples, 0.19%)</title><rect x="26.4" y="357" width="2.3" height="15.0" fill="rgb(205,226,12)" rx="2" ry="2" />
<text  x="29.38" y="367.5" ></text>
</g>
<g >
<title>runtime.notesleep (11 samples, 0.42%)</title><rect x="1160.0" y="325" width="5.0" height="15.0" fill="rgb(218,173,10)" rx="2" ry="2" />
<text  x="1162.98" y="335.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.04%)</title><rect x="1184.5" y="357" width="0.5" height="15.0" fill="rgb(223,70,3)" rx="2" ry="2" />
<text  x="1187.54" y="367.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwlock (3 samples, 0.12%)</title><rect x="1017.6" y="293" width="1.4" height="15.0" fill="rgb(210,175,11)" rx="2" ry="2" />
<text  x="1020.59" y="303.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (1 samples, 0.04%)</title><rect x="1022.1" y="325" width="0.5" height="15.0" fill="rgb(235,144,14)" rx="2" ry="2" />
<text  x="1025.14" y="335.5" ></text>
</g>
<g >
<title>runtime.nanotime (6 samples, 0.23%)</title><rect x="1167.3" y="373" width="2.7" height="15.0" fill="rgb(216,163,31)" rx="2" ry="2" />
<text  x="1170.26" y="383.5" ></text>
</g>
<g >
<title>runtime.wakep (3 samples, 0.12%)</title><rect x="821.1" y="245" width="1.3" height="15.0" fill="rgb(209,66,30)" rx="2" ry="2" />
<text  x="824.08" y="255.5" ></text>
</g>
<g >
<title>runtime.goready (4 samples, 0.15%)</title><rect x="94.2" y="165" width="1.8" height="15.0" fill="rgb(205,178,15)" rx="2" ry="2" />
<text  x="97.16" y="175.5" ></text>
</g>
<g >
<title>runtime.runqgrab (8 samples, 0.31%)</title><rect x="1155.0" y="341" width="3.6" height="15.0" fill="rgb(216,198,10)" rx="2" ry="2" />
<text  x="1157.97" y="351.5" ></text>
</g>
<g >
<title>syscall.Recvfrom (353 samples, 13.61%)</title><rect x="857.0" y="293" width="160.6" height="15.0" fill="rgb(209,161,50)" rx="2" ry="2" />
<text  x="860.02" y="303.5" >syscall.Recvfrom</text>
</g>
<g >
<title>net.(*UDPConn).readFromUDP (397 samples, 15.30%)</title><rect x="842.0" y="357" width="180.6" height="15.0" fill="rgb(241,100,31)" rx="2" ry="2" />
<text  x="845.00" y="367.5" >net.(*UDPConn).readFrom..</text>
</g>
<g >
<title>runtime.mPark (12 samples, 0.46%)</title><rect x="1159.5" y="341" width="5.5" height="15.0" fill="rgb(234,159,18)" rx="2" ry="2" />
<text  x="1162.52" y="351.5" ></text>
</g>
<g >
<title>runtime.startm (3 samples, 0.12%)</title><rect x="94.6" y="85" width="1.4" height="15.0" fill="rgb(217,61,23)" rx="2" ry="2" />
<text  x="97.61" y="95.5" ></text>
</g>
<g >
<title>runtime.lock2 (5 samples, 0.19%)</title><rect x="1165.0" y="357" width="2.3" height="15.0" fill="rgb(212,43,32)" rx="2" ry="2" />
<text  x="1167.98" y="367.5" ></text>
</g>
<g >
<title>runtime.greyobject (3 samples, 0.12%)</title><rect x="778.8" y="341" width="1.3" height="15.0" fill="rgb(214,115,9)" rx="2" ry="2" />
<text  x="781.77" y="351.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.08%)</title><rect x="821.5" y="197" width="0.9" height="15.0" fill="rgb(210,138,37)" rx="2" ry="2" />
<text  x="824.53" y="207.5" ></text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.04%)</title><rect x="764.2" y="261" width="0.5" height="15.0" fill="rgb(212,63,1)" rx="2" ry="2" />
<text  x="767.22" y="271.5" ></text>
</g>
<g >
<title>net.ipToSockaddr (34 samples, 1.31%)</title><rect x="64.6" y="261" width="15.5" height="15.0" fill="rgb(216,123,39)" rx="2" ry="2" />
<text  x="67.59" y="271.5" ></text>
</g>
<g >
<title>runtime.ready (15 samples, 0.58%)</title><rect x="815.6" y="261" width="6.8" height="15.0" fill="rgb(208,112,13)" rx="2" ry="2" />
<text  x="818.62" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (1 samples, 0.04%)</title><rect x="746.9" y="341" width="0.5" height="15.0" fill="rgb(214,49,44)" rx="2" ry="2" />
<text  x="749.93" y="351.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (5 samples, 0.19%)</title><rect x="1165.0" y="373" width="2.3" height="15.0" fill="rgb(225,138,21)" rx="2" ry="2" />
<text  x="1167.98" y="383.5" ></text>
</g>
<g >
<title>runtime.pMask.read (11 samples, 0.42%)</title><rect x="1172.3" y="373" width="5.0" height="15.0" fill="rgb(238,26,38)" rx="2" ry="2" />
<text  x="1175.26" y="383.5" ></text>
</g>
<g >
<title>runtime.newobject (20 samples, 0.77%)</title><rect x="1022.6" y="357" width="9.1" height="15.0" fill="rgb(234,27,33)" rx="2" ry="2" />
<text  x="1025.60" y="367.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.04%)</title><rect x="1185.0" y="421" width="0.5" height="15.0" fill="rgb(233,139,43)" rx="2" ry="2" />
<text  x="1188.00" y="431.5" ></text>
</g>
<g >
<title>runtime.wirep (1 samples, 0.04%)</title><rect x="1017.1" y="213" width="0.5" height="15.0" fill="rgb(237,156,42)" rx="2" ry="2" />
<text  x="1020.14" y="223.5" ></text>
</g>
<g >
<title>runtime.findrunnable (206 samples, 7.94%)</title><rect x="1071.3" y="373" width="93.7" height="15.0" fill="rgb(240,219,29)" rx="2" ry="2" />
<text  x="1074.27" y="383.5" >runtime.fin..</text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.12%)</title><rect x="94.6" y="69" width="1.4" height="15.0" fill="rgb(237,128,20)" rx="2" ry="2" />
<text  x="97.61" y="79.5" ></text>
</g>
<g >
<title>runtime.casgstatus (4 samples, 0.15%)</title><rect x="1035.3" y="389" width="1.9" height="15.0" fill="rgb(225,176,19)" rx="2" ry="2" />
<text  x="1038.34" y="399.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (4 samples, 0.15%)</title><rect x="828.4" y="357" width="1.8" height="15.0" fill="rgb(234,221,40)" rx="2" ry="2" />
<text  x="831.36" y="367.5" ></text>
</g>
<g >
<title>runtime.acquireSudog (4 samples, 0.15%)</title><rect x="737.8" y="357" width="1.9" height="15.0" fill="rgb(214,6,54)" rx="2" ry="2" />
<text  x="740.83" y="367.5" ></text>
</g>
<g >
<title>net.(*UDPConn).readFrom (391 samples, 15.07%)</title><rect x="844.7" y="341" width="177.9" height="15.0" fill="rgb(237,45,12)" rx="2" ry="2" />
<text  x="847.73" y="351.5" >net.(*UDPConn).readFrom</text>
</g>
<g >
<title>runtime.casgstatus (3 samples, 0.12%)</title><rect x="817.9" y="245" width="1.4" height="15.0" fill="rgb(210,96,41)" rx="2" ry="2" />
<text  x="820.90" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (4 samples, 0.15%)</title><rect x="863.4" y="197" width="1.8" height="15.0" fill="rgb(245,37,42)" rx="2" ry="2" />
<text  x="866.38" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 0.08%)</title><rect x="68.7" y="213" width="0.9" height="15.0" fill="rgb(221,54,34)" rx="2" ry="2" />
<text  x="71.68" y="223.5" ></text>
</g>
<g >
<title>runtime.handoff (1 samples, 0.04%)</title><rect x="866.1" y="133" width="0.5" height="15.0" fill="rgb(245,58,27)" rx="2" ry="2" />
<text  x="869.11" y="143.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).waitRead (6 samples, 0.23%)</title><rect x="1019.4" y="309" width="2.7" height="15.0" fill="rgb(231,8,29)" rx="2" ry="2" />
<text  x="1022.41" y="319.5" ></text>
</g>
<g >
<title>runtime.stackpoolalloc (1 samples, 0.04%)</title><rect x="80.1" y="197" width="0.4" height="15.0" fill="rgb(215,73,4)" rx="2" ry="2" />
<text  x="83.05" y="207.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (3 samples, 0.12%)</title><rect x="760.1" y="341" width="1.4" height="15.0" fill="rgb(241,47,40)" rx="2" ry="2" />
<text  x="763.12" y="351.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.04%)</title><rect x="867.0" y="149" width="0.5" height="15.0" fill="rgb(226,104,38)" rx="2" ry="2" />
<text  x="870.02" y="159.5" ></text>
</g>
<g >
<title>runtime.heapBits.bits (1 samples, 0.04%)</title><rect x="74.1" y="133" width="0.5" height="15.0" fill="rgb(210,42,1)" rx="2" ry="2" />
<text  x="77.14" y="143.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (13 samples, 0.50%)</title><rect x="692.3" y="181" width="6.0" height="15.0" fill="rgb(223,4,4)" rx="2" ry="2" />
<text  x="695.34" y="191.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.08%)</title><rect x="821.5" y="213" width="0.9" height="15.0" fill="rgb(213,204,22)" rx="2" ry="2" />
<text  x="824.53" y="223.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).dequeue (4 samples, 0.15%)</title><rect x="92.3" y="181" width="1.9" height="15.0" fill="rgb(215,208,27)" rx="2" ry="2" />
<text  x="95.34" y="191.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwunlock (19 samples, 0.73%)</title><rect x="87.3" y="229" width="8.7" height="15.0" fill="rgb(224,145,17)" rx="2" ry="2" />
<text  x="90.33" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (2 samples, 0.08%)</title><rect x="863.4" y="117" width="0.9" height="15.0" fill="rgb(219,52,48)" rx="2" ry="2" />
<text  x="866.38" y="127.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (324 samples, 12.49%)</title><rect x="870.2" y="261" width="147.4" height="15.0" fill="rgb(245,180,46)" rx="2" ry="2" />
<text  x="873.21" y="271.5" >syscall.Syscall6</text>
</g>
<g >
<title>runtime.wakep (3 samples, 0.12%)</title><rect x="94.6" y="101" width="1.4" height="15.0" fill="rgb(212,82,47)" rx="2" ry="2" />
<text  x="97.61" y="111.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.08%)</title><rect x="706.9" y="165" width="0.9" height="15.0" fill="rgb(231,88,9)" rx="2" ry="2" />
<text  x="709.90" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.12%)</title><rect x="1186.4" y="421" width="1.3" height="15.0" fill="rgb(207,108,8)" rx="2" ry="2" />
<text  x="1189.36" y="431.5" ></text>
</g>
<g >
<title>memeqbody (4 samples, 0.15%)</title><rect x="719.2" y="309" width="1.8" height="15.0" fill="rgb(228,39,2)" rx="2" ry="2" />
<text  x="722.18" y="319.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (1 samples, 0.04%)</title><rect x="747.8" y="405" width="0.5" height="15.0" fill="rgb(235,50,52)" rx="2" ry="2" />
<text  x="750.84" y="415.5" ></text>
</g>
<g >
<title>runtime.casgstatus (8 samples, 0.31%)</title><rect x="694.6" y="165" width="3.7" height="15.0" fill="rgb(218,108,40)" rx="2" ry="2" />
<text  x="697.62" y="175.5" ></text>
</g>
<g >
<title>runtime.entersyscall (16 samples, 0.62%)</title><rect x="691.0" y="197" width="7.3" height="15.0" fill="rgb(236,114,29)" rx="2" ry="2" />
<text  x="693.98" y="207.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).popTail (1 samples, 0.04%)</title><rect x="837.5" y="309" width="0.4" height="15.0" fill="rgb(224,68,54)" rx="2" ry="2" />
<text  x="840.46" y="319.5" ></text>
</g>
<g >
<title>runtime.handoff (9 samples, 0.35%)</title><rect x="755.6" y="341" width="4.1" height="15.0" fill="rgb(216,123,1)" rx="2" ry="2" />
<text  x="758.57" y="351.5" ></text>
</g>
<g >
<title>runtime.lock2 (3 samples, 0.12%)</title><rect x="743.3" y="357" width="1.4" height="15.0" fill="rgb(212,25,46)" rx="2" ry="2" />
<text  x="746.29" y="367.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (1 samples, 0.04%)</title><rect x="863.4" y="101" width="0.4" height="15.0" fill="rgb(252,153,8)" rx="2" ry="2" />
<text  x="866.38" y="111.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.04%)</title><rect x="1033.5" y="373" width="0.5" height="15.0" fill="rgb(233,67,5)" rx="2" ry="2" />
<text  x="1036.52" y="383.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readLock (3 samples, 0.12%)</title><rect x="1017.6" y="309" width="1.4" height="15.0" fill="rgb(209,212,54)" rx="2" ry="2" />
<text  x="1020.59" y="319.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).ReadFrom (367 samples, 14.15%)</title><rect x="850.6" y="309" width="167.0" height="15.0" fill="rgb(244,165,30)" rx="2" ry="2" />
<text  x="853.65" y="319.5" >internal/poll.(*FD).R..</text>
</g>
<g >
<title>runtime.netpollblock (2 samples, 0.08%)</title><rect x="1021.2" y="261" width="0.9" height="15.0" fill="rgb(220,1,47)" rx="2" ry="2" />
<text  x="1024.23" y="271.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (1 samples, 0.04%)</title><rect x="866.1" y="149" width="0.5" height="15.0" fill="rgb(208,94,42)" rx="2" ry="2" />
<text  x="869.11" y="159.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (12 samples, 0.46%)</title><rect x="1005.8" y="229" width="5.4" height="15.0" fill="rgb(252,81,36)" rx="2" ry="2" />
<text  x="1008.77" y="239.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readUnlock (5 samples, 0.19%)</title><rect x="854.7" y="293" width="2.3" height="15.0" fill="rgb(244,167,40)" rx="2" ry="2" />
<text  x="857.74" y="303.5" ></text>
</g>
<g >
<title>runtime.scanobject (92 samples, 3.55%)</title><rect x="764.7" y="357" width="41.8" height="15.0" fill="rgb(229,72,40)" rx="2" ry="2" />
<text  x="767.67" y="367.5" >run..</text>
</g>
<g >
<title>runtime.chanparkcommit (1 samples, 0.04%)</title><rect x="1037.2" y="389" width="0.4" height="15.0" fill="rgb(210,36,54)" rx="2" ry="2" />
<text  x="1040.15" y="399.5" ></text>
</g>
<g >
<title>runtime.main (495 samples, 19.08%)</title><rect x="806.5" y="421" width="225.2" height="15.0" fill="rgb(205,160,48)" rx="2" ry="2" />
<text  x="809.52" y="431.5" >runtime.main</text>
</g>
<g >
<title>runtime.findObject (8 samples, 0.31%)</title><rect x="775.1" y="341" width="3.7" height="15.0" fill="rgb(208,73,9)" rx="2" ry="2" />
<text  x="778.13" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (4 samples, 0.15%)</title><rect x="863.4" y="181" width="1.8" height="15.0" fill="rgb(210,78,29)" rx="2" ry="2" />
<text  x="866.38" y="191.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (18 samples, 0.69%)</title><rect x="69.6" y="165" width="8.2" height="15.0" fill="rgb(245,69,10)" rx="2" ry="2" />
<text  x="72.59" y="175.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.04%)</title><rect x="861.6" y="245" width="0.4" height="15.0" fill="rgb(215,188,30)" rx="2" ry="2" />
<text  x="864.57" y="255.5" ></text>
</g>
<g >
<title>syscall.sendmsg (1,327 samples, 51.16%)</title><rect x="101.0" y="229" width="603.6" height="15.0" fill="rgb(208,112,40)" rx="2" ry="2" />
<text  x="103.98" y="239.5" >syscall.sendmsg</text>
</g>
<g >
<title>runtime.handoff (3 samples, 0.12%)</title><rect x="71.9" y="117" width="1.3" height="15.0" fill="rgb(223,94,39)" rx="2" ry="2" />
<text  x="74.87" y="127.5" ></text>
</g>
<g >
<title>runtime.add (1 samples, 0.04%)</title><rect x="716.0" y="325" width="0.5" height="15.0" fill="rgb(238,42,30)" rx="2" ry="2" />
<text  x="719.00" y="335.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (1 samples, 0.04%)</title><rect x="747.4" y="373" width="0.4" height="15.0" fill="rgb(224,212,49)" rx="2" ry="2" />
<text  x="750.39" y="383.5" ></text>
</g>
<g >
<title>runtime.releaseSudog (4 samples, 0.15%)</title><rect x="740.6" y="357" width="1.8" height="15.0" fill="rgb(210,2,32)" rx="2" ry="2" />
<text  x="743.56" y="367.5" ></text>
</g>
<g >
<title>runtime.nobarrierWakeTime (5 samples, 0.19%)</title><rect x="1170.0" y="373" width="2.3" height="15.0" fill="rgb(218,114,4)" rx="2" ry="2" />
<text  x="1172.98" y="383.5" ></text>
</g>
<g >
<title>runtime.globrunqget (1 samples, 0.04%)</title><rect x="1081.7" y="357" width="0.5" height="15.0" fill="rgb(221,108,23)" rx="2" ry="2" />
<text  x="1084.73" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (1 samples, 0.04%)</title><rect x="774.2" y="341" width="0.5" height="15.0" fill="rgb(229,68,38)" rx="2" ry="2" />
<text  x="777.23" y="351.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepareWrite (1 samples, 0.04%)</title><rect x="710.5" y="261" width="0.5" height="15.0" fill="rgb(219,138,6)" rx="2" ry="2" />
<text  x="713.54" y="271.5" ></text>
</g>
<g >
<title>runtime.(*guintptr).cas (1 samples, 0.04%)</title><rect x="94.2" y="101" width="0.4" height="15.0" fill="rgb(215,21,2)" rx="2" ry="2" />
<text  x="97.16" y="111.5" ></text>
</g>
<g >
<title>runtime.scanstack (3 samples, 0.12%)</title><rect x="763.3" y="325" width="1.4" height="15.0" fill="rgb(225,135,9)" rx="2" ry="2" />
<text  x="766.31" y="335.5" ></text>
</g>
<g >
<title>runtime.stackcacherefill (1 samples, 0.04%)</title><rect x="80.1" y="213" width="0.4" height="15.0" fill="rgb(210,72,40)" rx="2" ry="2" />
<text  x="83.05" y="223.5" ></text>
</g>
<g >
<title>runtime.usleep (6 samples, 0.23%)</title><rect x="1155.9" y="325" width="2.7" height="15.0" fill="rgb(226,40,42)" rx="2" ry="2" />
<text  x="1158.88" y="335.5" ></text>
</g>
<g >
<title>runtime.casgstatus (6 samples, 0.23%)</title><rect x="1008.0" y="213" width="2.8" height="15.0" fill="rgb(209,55,23)" rx="2" ry="2" />
<text  x="1011.04" y="223.5" ></text>
</g>
<g >
<title>runtime.morestack (1 samples, 0.04%)</title><rect x="1184.5" y="421" width="0.5" height="15.0" fill="rgb(243,51,50)" rx="2" ry="2" />
<text  x="1187.54" y="431.5" ></text>
</g>
<g >
<title>runtime.semrelease (11 samples, 0.42%)</title><rect x="91.0" y="213" width="5.0" height="15.0" fill="rgb(232,112,5)" rx="2" ry="2" />
<text  x="93.97" y="223.5" ></text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.04%)</title><rect x="1033.1" y="373" width="0.4" height="15.0" fill="rgb(229,60,5)" rx="2" ry="2" />
<text  x="1036.06" y="383.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="1028.1" y="309" width="0.4" height="15.0" fill="rgb(223,196,38)" rx="2" ry="2" />
<text  x="1031.06" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (5 samples, 0.19%)</title><rect x="863.4" y="213" width="2.3" height="15.0" fill="rgb(236,93,7)" rx="2" ry="2" />
<text  x="866.38" y="223.5" ></text>
</g>
<g >
<title>net.(*UDPConn).writeMsg (1,430 samples, 55.13%)</title><rect x="60.5" y="293" width="650.5" height="15.0" fill="rgb(248,72,38)" rx="2" ry="2" />
<text  x="63.49" y="303.5" >net.(*UDPConn).writeMsg</text>
</g>
<g >
<title>runtime.(*gcWork).balance (3 samples, 0.12%)</title><rect x="71.9" y="133" width="1.3" height="15.0" fill="rgb(205,108,22)" rx="2" ry="2" />
<text  x="74.87" y="143.5" ></text>
</g>
<g >
<title>runtime/pprof.readProfile (1 samples, 0.04%)</title><rect x="1189.5" y="405" width="0.5" height="15.0" fill="rgb(219,120,42)" rx="2" ry="2" />
<text  x="1192.55" y="415.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).wait (6 samples, 0.23%)</title><rect x="1019.4" y="293" width="2.7" height="15.0" fill="rgb(226,101,33)" rx="2" ry="2" />
<text  x="1022.41" y="303.5" ></text>
</g>
<g >
<title>sync.runtime_procPin (1 samples, 0.04%)</title><rect x="726.5" y="341" width="0.4" height="15.0" fill="rgb(247,35,20)" rx="2" ry="2" />
<text  x="729.46" y="351.5" ></text>
</g>
<g >
<title>runtime.entersyscall (12 samples, 0.46%)</title><rect x="1005.8" y="245" width="5.4" height="15.0" fill="rgb(229,92,48)" rx="2" ry="2" />
<text  x="1008.77" y="255.5" ></text>
</g>
</g>
</svg>
